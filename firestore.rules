rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user has specific role
    function hasRole(role) {
      return isAuthenticated() && 
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == role;
    }
    
    // Helper function to check if user is admin
    function isAdmin() {
      return hasRole('admin');
    }
    
    // Helper function to check if user is accessing their own data
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // Users collection - basic user info
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow write: if isOwner(userId) || isAdmin();
    }
    
    // Patients collection
    match /patients/{patientId} {
      allow read: if isOwner(patientId) || isAdmin() || hasRole('dentist');
      allow write: if isOwner(patientId) || isAdmin();
    }
    
    // Dentists collection
    match /dentists/{dentistId} {
      allow read: if isAuthenticated();
      allow write: if isOwner(dentistId) || isAdmin();
    }
    
    // Admin collections - restricted access
    match /admins/{adminId} {
      allow read: if isAdmin() && isOwner(adminId);
      allow write: if isAdmin() && isOwner(adminId);
    }
    
    match /admin_access/{adminId} {
      allow read: if isAdmin() && isOwner(adminId);
      allow write: if isAdmin() && isOwner(adminId);
    }
    
    match /admin_profiles/{adminId} {
      allow read: if isAdmin() && isOwner(adminId);
      allow write: if isAdmin() && isOwner(adminId);
    }
    
    // Appointments - accessible by patients, dentists, and admins
    match /appointments/{appointmentId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated();
    }
    
    // Chat messages
    match /chats/{chatId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated();
    }
    
    // Announcements
    match /announcements/{announcementId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }
    
    // Feedback
    match /feedback/{feedbackId} {
      allow read: if isAdmin() || hasRole('dentist');
      allow write: if isAuthenticated();
    }
    
    // Patient Feedback
    match /patientFeedback/{feedbackId} {
      allow read: if isAdmin() || hasRole('dentist');
      allow write: if isAuthenticated();
    }
    
    // Patient records
    match /patient_records/{patientId} {
      allow read: if isOwner(patientId) || isAdmin() || hasRole('dentist');
      allow write: if isAdmin() || hasRole('dentist');
    }
    
    // Beneficiaries collection
    match /beneficiaries/{beneficiaryId} {
      allow read, write: if isAuthenticated() && 
        (isAdmin() || resource.data.userId == request.auth.uid);
    }
    
    // Detection Results collection
    match /detectionResults/{detectionId} {
      // Users can read/write their own detection results
      allow read, write: if isAuthenticated() && 
        resource.data.userId == request.auth.uid;
      
      // Dentists and admins can read all detection results
      allow read: if isAuthenticated() && (hasRole('dentist') || isAdmin());
      
      // Dentists and admins can update review status
      allow update: if isAuthenticated() && (hasRole('dentist') || isAdmin()) &&
        request.resource.data.diff(resource.data).affectedKeys()
        .hasOnly(['reviewed', 'reviewedBy', 'reviewedAt', 'reviewNotes', 'reviewerVerification', 'updatedAt']);
      
      // Allow creation for authenticated users
      allow create: if isAuthenticated() && 
        request.resource.data.userId == request.auth.uid;
    }
    
    // Default deny all other documents
    match /{document=**} {
      allow read, write: if false;
    }
  }
}